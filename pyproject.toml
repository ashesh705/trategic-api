[tool.poetry]
name = "trategic-api"
version = "0.1.0"
description = "API for the Trategic project"
authors = ["Ashesh Anand <62696185+ashesh705@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.65.2"
pydantic = {extras = ["dotenv"], version = "^1.8.2"}
PyYAML = "^5.4.1"
uvicorn = {extras = ["standard"], version = "^0.14.0"}
arq = "^0.20"

[tool.poetry.dev-dependencies]
ipython = "^7.24.1"
isort = "^5.9.0"
black = "^21.6b0"
flake8 = "^3.9.2"
mypy = "^0.902"
pre-commit = "^2.13.0"
taskipy = "^1.8.1"
pytest = "^6.2.4"
pytest-cov = "^2.12.1"
pytest-asyncio = "^0.15.1"
httpx = "^0.18.2"
types-PyYAML = "^5.4.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 80

[tool.isort]
line_length = 80
profile = "black"

[tool.pytest.ini_options]
addopts = "-ra -v"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "error:.*deprecated and ignored since IPython.*:DeprecationWarning",
    # "error:.*will copy column.*:sqlalchemy.exc.SAWarning"
]

[tool.coverage.run]
branch = true
source = [
  "src"
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain if tests don't hit defensive assertion code
    "raise NotImplementedError"
]

[tool.taskipy.tasks]
format = { cmd = "isort . && black .", help = "Fix all code formatting issues" }
format-check = { cmd = "isort . -c && black --check .", help = "Check code for formatting issues" }
lint-check = {cmd = "flake8 && mypy .", help = "Check code for any lint issues"}
test = { cmd = "python -m pytest --cov", help = "Run all unit tests and produce coverage reports" }
serve = { cmd = "uvicorn src.api:create_api --factory --reload --reload-dir src/ --log-config=logging.yaml", help = "Run a dev server hosting the application" }
worker = { cmd = "arq src.tasks.WorkerSettings --watch src/", help = "Run an Arq worker to process background tasks" }

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
strict_optional = true
